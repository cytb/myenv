#include <string>
#include <iostream>
#include <cstring>

#include <unistd.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netdb.h>

int simple_http_get(
    const std::string& host,
    const std::string& path,
    std::ostream& out
){

  using namespace std;

  addrinfo *res;
  addrinfo hints;

  cout << "ok0";
  memset(&hints, 0, sizeof(hints));
  hints.ai_socktype = SOCK_STREAM;
  hints.ai_family   = AF_INET;
  cout << "ok0";
  if( ::getaddrinfo(host.c_str(), NULL, &hints, &res) ){
    return (-1);
  }
    cout << "ok1";

  int sock = socket(AF_INET, SOCK_STREAM, 0);
  if( sock < 0 || connect(sock, res->ai_addr, res->ai_addrlen) == (-1)){
    freeaddrinfo(res);
    return (-1);
  }
    cout << "ok2";
  
  freeaddrinfo(res);

  string request  = "GET " + path + " HTTP/1.1\n"
                    "Connection: Close\n"
                    "\n";

  if( send(sock, request.c_str(), request.length(), 0) != request.length() ){
    return (-1);
  }

  {
    cout << "ok";
    char buffer[1024];
    ssize_t n;

    do {
      n = recv(sock, buffer, 1023, 0);
      buffer[ (n < 0 ? 0 : n) ] = 0;
      out << string(buffer);
    }
    while(n > 0);
  }
  return 0;
}

int main(int argc, char** argv){
  // simple_http_get("example.com","/", std::cout);
  if( argc > 2 ){
    simple_http_get(argv[1],argv[2], std::cout);
  }
  return 0;
}

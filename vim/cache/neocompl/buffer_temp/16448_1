#include <string>
#include <algorithm>
#include <cstring>
#include <unistd.h>

int simple_http_get(std::string& host, std::string& path, std::ostream& out){
  using namespace std;

  addrinfo *res;
  addrinfo hints;

  ::memset(&hints, 0, sizeof(hints));
  hints.ai_socktype = SOCK_STREAM;
  hints.ai_family   = AF_INET;
  if( ::getaddrinfo(host.c_str, NULL, &hints, &res) ){
    return (-1)
  }

  int sock = socket(AF_INET, SOCK_STREAM, 0);
  if( sock == INVALID_SOCKET ||
      connect(sock, res->ai_addr, res->ai_addrlen) == (-1)
  ){
    freeaddrinfo(res);
    return (-1);
  }
  
  freeaddrinfo(res);

  string request  = "GET " + path + " HTTP/1.1\n"
                    "Connection: Close\n"
                    "\n";

  isend(sock, request.c_str(), request.length(), 0);

  {
    char buffer[1024];
    int n;

    do {
      recv(sock, buffer, 1023, 0);
      buffer[ ::max( n, 0 ) ] = 0;
      out << buffer;
    }
    while(n > 0);
  }
  return 0;
}

int main(){
  simple_http_get("example.com","/", cout);
  return 0;
}

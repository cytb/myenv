{'http:', 'haskell', 'docs', 'latest', 'html', 'users_guide', 'pragmas', 's:pragmas', 'DEPRECATED', 'INCLUDE', 'INLINE', 'INLINABLE', 'LANGUAGE', 'LINE', 'MINIMAL', 'NOINLINE', 'NOUNPACK', 'OPTIONS_GHC', 'RULES', 'SOURCE', 'SPECIALIZE', 'UNPACK', 'WARNING', 'todo:', 'channel', 'support', 's:is_async', 'has(', 'nvim', 'exists(', 'job_getchannel', 'job_info', 's:job_info', 's:max_processes', 'function!', 'necoghc#boot(', 'abort', 's:browse_cache', 'return', 'endif', 'call', 's:ghc_mod_caching_browse(', 'Prelude', 'augroup', 'necoghc', 'autocmd!', 'autocmd', 'FileType', 's:on_haskell(', 'lhaskell', 'endfunction', 'necoghc#omnifunc(', 'findstart', 'base', 'a:findstart', 'l:col', 'col(', 'else', 'necoghc#get_keyword_pos(', 'getline(', 'Redo', 'get_keyword_pos', 'detect', 'YouCompleteMe', 'l:pos', 'necoghc#get_complete_words(', 'a:base', 'cur_text', 's:synname(', 'Comment', 'nothing', 'just_pos', 's:multiline_import(', 'a:cur_text', 'import', 'matchend(', 'parp', 'qualified', 'Pragma', 'l:pattern', '[:alnum:]', '[:alpha:]', 'match(', 'When', 'completion', 'method', 'strlen(', 's:word_prefix(', 'dict', 'keyword', 'need_prefix_filter', 'l:len', 'a:keyword', 'strpart(', 'a:dict', 'word', 'a:need_prefix_filter', 's:to_desc(', 'l:desc', 'has_key(', 'kind', 'printf(', 'a:sym', 'args', 'elseif', 'type', 'cur_keyword_pos', 'cur_keyword_str', 'HACK:', 'invoked', 'from', 'returns', 'position', 'returned', 'omnifunc', 'phase', 'a:cur_keyword_pos', 'Invoked', 'l:cur_keyword_str', 'a:cur_keyword_str', 'l:need_prefix_filter', 'l:need_filter', 'empty(', 'doesn', 'give', 'correct', 'filter', 'prefix', 'neocomplcache', 'neocomplete', 'They', 'need', 'l:list', 'l:line', '&filetype', 'substitute(', 'just_list', 'list', 's:filter(', 'l:mod', 'matchstr(', 'l:sym', 'l:dict', 'items(', 'necoghc#browse(', 'add(', 'menu', 'endfor', 'l:syn', 's:list_cache', 's:ghc_mod(', 's:lang_cache', 'lang', 'l:lang', 's:flag_cache', 'flag', 'l:flag', 'l:idx', 'l:qual', 'l:name', 'l:opts', 'necoghc#get_modules(', 'export', 'like', 'following', 'case:', 'Data', 'List', 'Maybe', 's:dangling_import(', 'getpos(', 'a:type', 'max(', 'a:mod', 'get(', 'l:cmd', 'browse', 'necoghc_enable_detailed_browse', 'callback', 'supply', 'extra', 'parameters', 'command', 'depending', 'module', 'name', 'g:NecoghcExtraBrowseOptions', 'g:NecoghcExtraBrowseOptions(', 's:ghc_mod_caching_async(', 'len(', 'filter(', 'copy(', 'v:val', 'l:id', 'jobstart(', '-mod', 'on_stdout', 'function(', 's:job_handler', 'on_stderr', 'on_exit', 'candidates', 'status', 'Note:', 'Windows', 'job_start(', 'does', 'work', 'shellslash', '&shellslash', 'noshellslash', 'l:job', 's:job_handler_vim', 's:channel2id(', 'job_getchannel(', 'finally', 'endtry', 's:job_handler_vim(', 's:job_handler(', 'a:channel', 'a:msg', 'event', 'a:id', 'a:event', 'exit', 'ch_status(', 'open', 'split(', 'iconv(', 'char', '&encoding', 'remove(', 'lines', 'map(', 'Join', 'previous', 'line', 'a:lines', 'matchlist(', 'class', 'data', 'newtype', 'some', 'error', 'occurred', 'break', 'necoghc#caching_modules(', 'b:necoghc_modules_cache', 's:extract_modules(', 'keys(', 'a:cmd', 'l:lines', 's:system(', 'l:warnings', 'Warning:', 'l:errors', 'Dummy:0:0:Error:', 'necoghc_debug', 'echohl', 'ErrorMsg', 'echomsg', 'neco', '-ghc', 'nothing:', 'join(', 'None', 'messages:', 'warning', 'l:modules', 'l:in_module', 'while', 'line(', 'l:str', 'l:end', 'l:qualified', '-Za-z', '-Za-z0-9', 'l:as', 'exports', 'skip', '<where', 'endwhile', 'necoghc#ghc_mod_version(', 'l:ret', 'version', 'cghc', 'a:000', 'mode(', 'synIDattr(', 'synID(', 's:exists_vimproc', 'vimproc#version(', 'catch', 'vimproc#system(', 'a:list', 'system(', 'InsertLeave', '<buffer>', 'command!', '-buffer', '-bar', '-nargs=', 'NecoGhcCaching', 'Adapted', 's:find_basedir', 'https:', 'github', 'eagletmt', 'ghcmod', '-vim', 'blob', 'e012a5b0b904c5c32eeea39071534d492a64a0f', 'autoload', 'vim#L336', '-L350', 's:get_ghcmod_root(', 'b:ghcmod_root', 'l:dir', 'getcwd(', 'fnamemodify(', 'bufname(', 'root', 'need_prefix', 'needed', 'a:needed', 'a:need_prefix', 'vim:', 'foldmethod', 'marker'}
